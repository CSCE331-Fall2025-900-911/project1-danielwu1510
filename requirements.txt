General Requirements
You will create and publish a website on people.tamu.edu:

Your project should be built with only HTML, CSS, and JavaScript.
You cannot use pre-made libraries or templates (e.g., Bootstrap and Tailwind are not allowed).
You may use TypeScript instead of JavaScript since TypeScript is a superset of JavaScript.
Your project should have one HTML file per page and one CSS file for each style.
A total of five required pages.
A total of two CSS files.
Your project should be consistently styled throughout in a way that gives a positive professional image.
Your code should use consistent naming conventions, and should also consistent use of white space (e.g., indentation, spaces in control blocks, blank lines).
One of the pages should include text of 300 words or more describing either yourself, your portfolio, your qualifications, or your service in more detail.
That is, the entirety of one page should have a total count of 300 words or more. 
Your resume will not be included in this word count.
This is part of the writing requirements of the class and must be passed to pass the course.
You will use your personal GitHub account to store your files and for revision control.

Pages Requirements
Your website will also contain at least 5 pages (i.e., one large scrollable page is not acceptable).

Landing area
Gives a positive first impression for a prospective employer or client.
Engages the audience to want to explore more, including interesting information that a prospective employer or organization would want to know.
Demonstrates your unique personality.
Shows how you would fit on someone's team and in their corporate culture.
Clear and concise, only including information that belongs here.
Label the page as index.html.

Technical portfolio
Describes technical projects you have completed or would like to complete.
Provides interesting details for the audience which may include links to your TAMU GitHub repository for these projects, thumbnails, and descriptions.
Label the page as portfolio.html.

Qualifications section
Provides your resume in an easily accessible format (PDF preferred but HTML acceptable).
Embedded as a file hosted on Google Drive (if using the PDF file option).
Describes your technical skills in addition listing them on your resume.
Discusses your technical areas of interest in Computer Science and why.
Label the page as qualifications.html.

Service section
Describes ways you give back to your community, either through volunteering, mentoring, or other similar activities (may include areas you would like to contribute to if not already).
Label the page as service.html.

AI-generated page
Uses Generative AI to create one additional page.
Not required to change styles like the other required pages.
note: styling will be handled through AI-generated inline CSS instead of from the required external CSS files 
Presents the capabilities of generative artificial intelligence (genAI).
Starts with a simple prompt.
Continually adds to the prompt until output is satisfied by you.
Creates a text box in the new page (Generative AI services can do this for you) that contains the prompt used by you in the final version of your AI-generated page.
Label the page as genai.html.

Navigation Requirements
Have clear and consistent navigation for your pages.

Internal links
Every page that you create must be linked from some other page.
The “Landing area” page must have links to all other pages.

External links
Minimum of 10 different links to external websites that are relevant to you and the work you are doing.
Note: All external websites must be hosted in unique domains.
Organically and appropriately placed throughout your project (not on a single “links” section).

Style toggle feature
Completely changes the look, feel, and layout of the website. To accomplish this, do not edit your CSS from the initial design. Start over with a new CSS file, plan the layout, then implement the plan.
Note: Styles limited to functionality such as switching to dark mode, changing background and font colors, or so on are not sufficient.
Uses a toggle button that changes the appearance of the website by alternating between different CSS files with JavaScript.
Note: the AI-generated page is exempt from toggling between alternate styles since it does not dependent on CSS files.
Examples:
See CSS Zen Garden (http://csszengarden.com/Links to an external site.) for an example of the impact of different CSS files on HTML.
See a sample (https://people.tamu.edu/~rob.light/CSCE315/zen.html) to see only the HTML required to build the same CSS Zen Garden website.
Or, use the web developer tools in your browser to turn off CSS on the CSS Zen Garden pages.

Resolution and View Requirements
The following assumptions will be made when viewing your resolution:

Varied resolutions on typical desktop or laptop screen sizes.
Desktop interface views (i.e., not mobile interface views).
Manual browser zooming of website to fit optimal viewing, if necessary.


Timeline for Deliverables
Week 2
Draft project website including all required contained webpages.
Create HTML code to implement your website's initial content.
Sketch the website's first layout and style.
Use GitHub to manage all project files
Usage: use the repo in the GitHub classroom organization.
Access: grant access to your TAs as a collaborator.
Submit in Canvas:
your landing page link
must look like: people.tamu.edu/~yourNetID
your TAMU GitHub link
your layout sketch

Week 3
Create CSS code to implement your first sketch (in a separate file).
Sketch the website's second layout and style.
Use your GitHub project to manage all project files.
Submit in Canvas:
your landing page link
must look like: people.tamu.edu/~yourNetID
your GitHub project link
your second layout sketch

Week 4
Create CSS code to implement your second sketch (in another separate file).
Implement a toggle button in JavaScript to switch between the two different CSS files.
Revise project website including all required contained webpages based on peer review feedback.
Update your GitHub project files accordingly.
Submit in Canvas:
your final landing page link
must look like: people.tamu.edu/~yourNetID
your GitHub project link
